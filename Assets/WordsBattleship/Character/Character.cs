using System;
using System.Collections;
using System.Globalization;
using System.Text.RegularExpressions;
using UnityEngine;

using DTAnimatorStateMachine;
using Tangible.Shared;

namespace Tangible.WordsBattleship {
    [CreateAssetMenu(fileName="Character", menuName="Character")]
    public class Character : ScriptableObject {
        // PRAGMA MARK - Public Interface
        public string Name {
            get { return name_; }
        }

        public Sprite MugShotSprite {
            get { return mugShotSprite_; }
        }

        public Sprite NeutralSprite {
            get { return neutralSprite_; }
        }

        public Sprite HappySprite {
            get { return happySprite_; }
        }

        public Sprite SadSprite {
            get { return sadSprite_; }
        }

        public string ViewPrefabName {
            get { return viewPrefabName_; }
        }

        public string GamePrefabName {
            get { return gamePrefabName_; }
        }


        // PRAGMA MARK - Internal
        [SerializeField] private string name_;
        [SerializeField] private Sprite mugShotSprite_;
        [SerializeField] private Sprite neutralSprite_;
        [SerializeField] private Sprite happySprite_;
        [SerializeField] private Sprite sadSprite_;

        // autogenerated from name_
        [SerializeField, ReadOnly] private string viewPrefabName_;
        [SerializeField, ReadOnly] private string gamePrefabName_;

        void OnValidate() {
            TextInfo textInfo = new CultureInfo("en-US", false).TextInfo;
            name_ = textInfo.ToTitleCase(name_).Replace(@"\s", "");

            viewPrefabName_ = name_ + "View";
            gamePrefabName_ = name_ + "Game";
        }
    }
}